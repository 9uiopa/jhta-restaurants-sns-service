<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.jhta.restaurants_service.mapper.PostMapper">

	<select id="getAllPosts" resultType="PostContentsDto">
	    select
			p.id             as id,
			p.title          as title,
			p.sub_title      as subTitle,
			p.create_date 	 as createDate,
			p.update_date 	 as updateDate,
			p.customer_id    as customerId,
			u.username 	   	 as userName,
			(   SELECT picture_file
		        FROM POST_DATA d
		        WHERE p.id = d.post_id
		        LIMIT 1
		    ) as pictureFile
		from
			POSTS p
		inner join
			USERS u on p.customer_id = u.id
	    order by
			p.create_date desc
		limit
			#{start}, #{limit}
	</select>
	
	<select id="getPostsPaginatedOfFollowersByFollowed" resultType="PostContentsDto">
		select
			p.id             as id,
			p.title          as title,
			p.sub_title      as subTitle,
			p.create_date 	 as createDate,
			p.update_date 	 as updateDate,
			p.customer_id    as customerId,
			u.username 	   	 as userName,
			(   SELECT picture_file
		        FROM POST_DATA d
		        WHERE p.id = d.post_id
		        LIMIT 1
		    ) as pictureFile
		from
			POSTS p
		inner join
			USERS u on p.customer_id = u.id
		where
			p.customer_id in (
				select follower_id
				from FOLLOWS
				where followed_id = #{followedId}
			)
		order by
			p.create_date desc
		limit
			#{start}, #{limit}
	</select>
	
	<select id="getRecentPostsThree" resultType="PostContentsDto">
	    select
			p.id             as id,
			p.title          as title,
			p.sub_title      as subTitle,
			p.create_date 	 as createDate,
			p.update_date 	 as updateDate,
			p.customer_id    as customerId,
			u.username 	   	 as userName,
			(   SELECT picture_file
		        FROM POST_DATA d
		        WHERE p.id = d.post_id
		        LIMIT 1
		    ) as pictureFile
		from
			POSTS p
		inner join
			USERS u on p.customer_id = u.id
	    order by
			p.create_date desc
	    limit
			0, 3
	</select>
	
	<select id="getRecentPostsThreeOfFollowersByFollowed" parameterType="int" resultType="PostContentsDto">
		select
			p.id             as id,
			p.title          as title,
			p.sub_title      as subTitle,
			p.create_date 	 as createDate,
			p.update_date 	 as updateDate,
			p.customer_id    as customerId,
			u.username 	   	 as userName,
			(   SELECT picture_file
		        FROM POST_DATA d
		        WHERE p.id = d.post_id
		        LIMIT 1
		    ) as pictureFile
		from
			POSTS p
		inner join
			USERS u on p.customer_id = u.id
		where
			p.customer_id in (
				select follower_id
				from FOLLOWS
				where followed_id = #{followedId}
			)
		order by
			p.create_date desc
		limit
			0, 3
	</select>
	
	<select id="getPostById" parameterType="int" resultType="Post">
		select 
			id				as id,
			title			as title,
			sub_title		as subTitle,
			create_date		as createDate,
			update_date		as updateDate,
			customer_id			as "customer.id",
			report_count	as reportCount,
			disabled		as disabled,
			blocked			as blocked
		from
			POSTS
		where	
			id = #{id}
	</select>
	
	<insert id="insertPost" parameterType="Post">
		<selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
		insert into POSTS
		(title, sub_title, customer_id, create_date, update_date)
		values
		(#{title}, #{subTitle}, #{customer.id}, #{createDate}, #{updateDate})
	</insert>

	<delete id="deletePost" parameterType="int">
		delete from 
			posts
		where
			id = #{id}
	</delete>
	
	<insert id="insertLike" parameterType="int">
		insert into POST_LIKES
			(customer_id, post_id )
		values
			(#{customerId},#{postId})
	</insert>
	
	<delete id="deleteLike" parameterType="int">
		delete from POST_LIKES
		where 
			post_id = #{postId} and customer_id = #{customerId}
	</delete>
	
	<update id="addLike" parameterType="int">
		update POSTS
		set liked_count = liked_count + 1
		where id = #{value}
	</update>
	
	<update id="cancelLike" parameterType="int">
		update POSTS
		set liked_count = liked_count - 1
		where id = #{value}
	</update>
</mapper>