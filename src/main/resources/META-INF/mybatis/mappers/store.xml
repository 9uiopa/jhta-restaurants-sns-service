<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.jhta.restaurants_service.mapper.StoreMapper">

	<select id = "getAllStores" resultType="Store">
		select
			business_license	as businessLicense,
			name				as name,
			address				as address,
			category			as category,
			zipcode				as zipcode,
			latitude			as latitude,
			longitude			as longitude,
			description			as description,
			phone				as phone,
			read_count			as readCount,
			create_date			as createDate,
			update_date			as updateDate,
			owner_id			as "owner.id",
			disabled			as disabled

		from
			STORES
	</select>


	<select id = "getStores" parameterType="map" resultType="SearchedStore">
		select *
		from (
						select
				            id      			as id,
				            name    			as name,
				           	review_avg			as reviewAvg,
				           	review_cnt			as reviewCnt,
				           	bookmark_cnt		as bookmarkCnt,
				           	category			as category,
							<choose>
								<when test="sort == 'rating'">
									row_number() over (order by review_avg desc) row_num
								</when>
								<when test="sort == 'bookmark'">
									row_number() over (order by bookmark_cnt desc) row_num
								</when>
								<when test="sort == 'review'">
									row_number() over (order by review_cnt desc) row_num
								</when>
							</choose>
				        from
				        	 (select id,
				        	 		name,
				        	 		category,
				        	 		IFNULL(review_cnt,0) review_cnt,
				        	 		IFNULL(review_avg,0) review_avg,
				        	 		IFNULL(bookmark_cnt,0) bookmark_cnt
				        	 	
				        	 from
					        	   STORES S left join 
					        	   (select 
						        	 	store_id, 
						        	 	AVG(rating) as review_avg, 
						        	 	COUNT(*) as review_cnt
							        from REVIEWS
							        group by store_id
						           ) R on S.id = R.store_id
						        	 
						        	 left join
						        	 (
						        	 	select
							        	 	store_id,
							        	 	COUNT(*) as bookmark_cnt
						        	 	
							        	from BOOKMARKS
							        	group by store_id
						        	 ) B on S.id = B.store_id
							<where>
								<if test="category != null">
								     S.category =  #{category}
							    </if>
							</where>
							) as SUB
						   
			) as TEMP
		
		where row_num between #{begin} and #{end};

	</select>



	<!--키워드검색,  카테고리화 할때 전체 row 자체가 해당 되는 row만 잡혀야함 -->
	<select id="getTotalRows" parameterType="map" resultType="int">
	
	  select count(*)
	  from STORES
		  <where>
		  	<if test="category != null">
			     category =  #{category}
		    </if>
		  	<if test="keyword != null">
			     and name like CONCAT('%', #{keyword}, '%')
		    </if>
		  </where>
	</select>

	<select id="getStoreById" parameterType="int" resultType="Store">
		select
			id 					as id,
			business_license	as businessLicense,
			name				as name,
			address				as address,
			category			as category,
			zipcode				as zipcode,
			latitude			as latitude,
			longitude			as longitude,
			description			as description,
			phone				as phone,
			read_count			as readCount,
			create_date			as createDate,
			update_date			as updateDate,
			owner_id			as "owner.id",
			disabled			as disabled
		from
			STORES
		where id = #{value}
	</select>
</mapper>